{
  "version": 3,
  "sources": ["../../../../../node_modules/angular-svg-round-progressbar/fesm2022/angular-svg-round-progressbar.mjs"],
  "sourcesContent": ["import * as i0 from '@angular/core';\nimport { Injectable, Optional, Inject, InjectionToken, EventEmitter, Component, ChangeDetectionStrategy, ViewChild, Input, Output, NgModule } from '@angular/core';\nimport { DOCUMENT } from '@angular/common';\nconst _c0 = [\"path\"];\nconst DEGREE_IN_RADIANS = Math.PI / 180;\nclass RoundProgressService {\n  constructor(document) {\n    this.supportsSvg = !!(document && document.createElementNS && document.createElementNS('http://www.w3.org/2000/svg', 'svg').createSVGRect);\n    this.base = document && document.head.querySelector('base');\n    this.hasPerf = typeof window !== 'undefined' && window.performance && window.performance.now && typeof window.performance.now() === 'number';\n  }\n  /**\n   * Resolves a SVG color against the page's `base` tag.\n   */\n  resolveColor(color) {\n    if (this.base && this.base.href) {\n      const hashIndex = color.indexOf('#');\n      if (hashIndex > -1 && color.indexOf('url') > -1) {\n        return color.slice(0, hashIndex) + location.href + color.slice(hashIndex);\n      }\n    }\n    return color;\n  }\n  /**\n   * Generates a timestamp.\n   */\n  getTimestamp() {\n    return this.hasPerf ? window.performance.now() : Date.now();\n  }\n  /**\n   * Generates the value for an SVG arc.\n   *\n   * @param current Current value.\n   * @param total Maximum value.\n   * @param pathRadius Radius of the SVG path.\n   * @param elementRadius Radius of the SVG container.\n   * @param isSemicircle Whether the element should be a semicircle.\n   */\n  getArc(current, total, pathRadius, elementRadius, isSemicircle = false) {\n    const value = Math.max(0, Math.min(current || 0, total));\n    const maxAngle = isSemicircle ? 180 : 359.9999;\n    const percentage = total === 0 ? maxAngle : value / total * maxAngle;\n    const start = this._polarToCartesian(elementRadius, pathRadius, percentage);\n    const end = this._polarToCartesian(elementRadius, pathRadius, 0);\n    const arcSweep = percentage <= 180 ? 0 : 1;\n    return `M ${start} A ${pathRadius} ${pathRadius} 0 ${arcSweep} 0 ${end}`;\n  }\n  /**\n   * Converts polar cooradinates to Cartesian.\n   *\n   * @param elementRadius Radius of the wrapper element.\n   * @param pathRadius Radius of the path being described.\n   * @param angleInDegrees Degree to be converted.\n   */\n  _polarToCartesian(elementRadius, pathRadius, angleInDegrees) {\n    const angleInRadians = (angleInDegrees - 90) * DEGREE_IN_RADIANS;\n    const x = elementRadius + pathRadius * Math.cos(angleInRadians);\n    const y = elementRadius + pathRadius * Math.sin(angleInRadians);\n    return x + ' ' + y;\n  }\n  static {\n    this.ɵfac = function RoundProgressService_Factory(t) {\n      return new (t || RoundProgressService)(i0.ɵɵinject(DOCUMENT, 8));\n    };\n  }\n  static {\n    this.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n      token: RoundProgressService,\n      factory: RoundProgressService.ɵfac,\n      providedIn: 'root'\n    });\n  }\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(RoundProgressService, [{\n    type: Injectable,\n    args: [{\n      providedIn: 'root'\n    }]\n  }], () => [{\n    type: undefined,\n    decorators: [{\n      type: Optional\n    }, {\n      type: Inject,\n      args: [DOCUMENT]\n    }]\n  }], null);\n})();\nconst DEFAULTS = {\n  radius: 125,\n  animation: 'easeOutCubic',\n  animationDelay: undefined,\n  duration: 500,\n  stroke: 15,\n  color: '#45CCCE',\n  background: '#EAEAEA',\n  responsive: false,\n  clockwise: true,\n  semicircle: false,\n  rounded: false\n};\nconst ROUND_PROGRESS_DEFAULTS = new InjectionToken('ROUND_PROGRESS_DEFAULTS', {\n  providedIn: 'root',\n  factory: () => DEFAULTS\n});\nconst ROUND_PROGRESS_DEFAULTS_PROVIDER = {\n  provide: ROUND_PROGRESS_DEFAULTS,\n  useValue: DEFAULTS\n};\n\n/**\n * TERMS OF USE - EASING EQUATIONS\n * Open source under the BSD License.\n *\n * Copyright © 2001 Robert Penner\n * All rights reserved.\n * Redistribution and use in source and binary forms, with or without modification, are permitted\n * provided that the following conditions are met:\n *\n * Redistributions of source code must retain the above copyright notice, this list of conditions\n * and the following disclaimer.\n *\n * Redistributions in binary form must reproduce the above copyright notice, this list of conditions\n * and the following disclaimer in the documentation and/or other materials provided with the\n * distribution.\n *\n * Neither the name of the author nor the names of contributors may be used to endorse or promote\n * products derived from this software without specific prior written permission.\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND ANY EXPRESS OR\n * IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND\n * FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR\n * CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL\n * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n * WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN\n * ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n */\nclass RoundProgressEase {\n  // t: current time (or position) of the neonate. This can be seconds or frames, steps,\n  // seconds, ms, whatever – as long as the unit is the same as is used for the total time.\n  // b: beginning value of the property.\n  // c: change between the beginning and destination value of the property.\n  // d: total time of the neonate.\n  linearEase(t, b, c, d) {\n    return c * t / d + b;\n  }\n  easeInQuad(t, b, c, d) {\n    return c * (t /= d) * t + b;\n  }\n  easeOutQuad(t, b, c, d) {\n    return -c * (t /= d) * (t - 2) + b;\n  }\n  easeInOutQuad(t, b, c, d) {\n    // eslint-disable-next-line no-cond-assign\n    if ((t /= d / 2) < 1) {\n      return c / 2 * t * t + b;\n    }\n    return -c / 2 * (--t * (t - 2) - 1) + b;\n  }\n  easeInCubic(t, b, c, d) {\n    return c * (t /= d) * t * t + b;\n  }\n  easeOutCubic(t, b, c, d) {\n    return c * ((t = t / d - 1) * t * t + 1) + b;\n  }\n  easeInOutCubic(t, b, c, d) {\n    // eslint-disable-next-line no-cond-assign\n    if ((t /= d / 2) < 1) {\n      return c / 2 * t * t * t + b;\n    }\n    return c / 2 * ((t -= 2) * t * t + 2) + b;\n  }\n  easeInQuart(t, b, c, d) {\n    return c * (t /= d) * t * t * t + b;\n  }\n  easeOutQuart(t, b, c, d) {\n    return -c * ((t = t / d - 1) * t * t * t - 1) + b;\n  }\n  easeInOutQuart(t, b, c, d) {\n    // eslint-disable-next-line no-cond-assign\n    if ((t /= d / 2) < 1) {\n      return c / 2 * t * t * t * t + b;\n    }\n    return -c / 2 * ((t -= 2) * t * t * t - 2) + b;\n  }\n  easeInQuint(t, b, c, d) {\n    return c * (t /= d) * t * t * t * t + b;\n  }\n  easeOutQuint(t, b, c, d) {\n    return c * ((t = t / d - 1) * t * t * t * t + 1) + b;\n  }\n  easeInOutQuint(t, b, c, d) {\n    // eslint-disable-next-line no-cond-assign\n    if ((t /= d / 2) < 1) {\n      return c / 2 * t * t * t * t * t + b;\n    }\n    return c / 2 * ((t -= 2) * t * t * t * t + 2) + b;\n  }\n  easeInSine(t, b, c, d) {\n    return -c * Math.cos(t / d * (Math.PI / 2)) + c + b;\n  }\n  easeOutSine(t, b, c, d) {\n    return c * Math.sin(t / d * (Math.PI / 2)) + b;\n  }\n  easeInOutSine(t, b, c, d) {\n    return -c / 2 * (Math.cos(Math.PI * t / d) - 1) + b;\n  }\n  easeInExpo(t, b, c, d) {\n    return t === 0 ? b : c * Math.pow(2, 10 * (t / d - 1)) + b;\n  }\n  easeOutExpo(t, b, c, d) {\n    return t === d ? b + c : c * (-Math.pow(2, -10 * t / d) + 1) + b;\n  }\n  easeInOutExpo(t, b, c, d) {\n    if (t === 0) {\n      return b;\n    }\n    if (t === d) {\n      return b + c;\n    }\n    // eslint-disable-next-line no-cond-assign\n    if ((t /= d / 2) < 1) {\n      return c / 2 * Math.pow(2, 10 * (t - 1)) + b;\n    }\n    return c / 2 * (-Math.pow(2, -10 * --t) + 2) + b;\n  }\n  easeInCirc(t, b, c, d) {\n    return -c * (Math.sqrt(1 - (t /= d) * t) - 1) + b;\n  }\n  easeOutCirc(t, b, c, d) {\n    return c * Math.sqrt(1 - (t = t / d - 1) * t) + b;\n  }\n  easeInOutCirc(t, b, c, d) {\n    // eslint-disable-next-line no-cond-assign\n    if ((t /= d / 2) < 1) {\n      return -c / 2 * (Math.sqrt(1 - t * t) - 1) + b;\n    }\n    return c / 2 * (Math.sqrt(1 - (t -= 2) * t) + 1) + b;\n  }\n  easeInElastic(t, b, c, d) {\n    const p = d * 0.3;\n    let s = 1.70158;\n    let a = c;\n    if (t === 0) {\n      return b;\n    }\n    // eslint-disable-next-line no-cond-assign\n    if ((t /= d) === 1) {\n      return b + c;\n    }\n    if (a < Math.abs(c)) {\n      a = c;\n      s = p / 4;\n    } else {\n      s = p / (2 * Math.PI) * Math.asin(c / a);\n    }\n    return -(a * Math.pow(2, 10 * t--) * Math.sin((t * d - s) * (2 * Math.PI) / p)) + b;\n  }\n  easeOutElastic(t, b, c, d) {\n    const p = d * 0.3;\n    let s = 1.70158;\n    let a = c;\n    if (t === 0) {\n      return b;\n    }\n    // eslint-disable-next-line no-cond-assign\n    if ((t /= d) === 1) {\n      return b + c;\n    }\n    if (a < Math.abs(c)) {\n      a = c;\n      s = p / 4;\n    } else {\n      s = p / (2 * Math.PI) * Math.asin(c / a);\n    }\n    return a * Math.pow(2, -10 * t) * Math.sin((t * d - s) * (2 * Math.PI) / p) + c + b;\n  }\n  easeInOutElastic(t, b, c, d) {\n    const p = d * (0.3 * 1.5);\n    let s = 1.70158;\n    let a = c;\n    if (t === 0) {\n      return b;\n    }\n    // eslint-disable-next-line no-cond-assign\n    if ((t /= d / 2) === 2) {\n      return b + c;\n    }\n    if (a < Math.abs(c)) {\n      a = c;\n      s = p / 4;\n    } else {\n      s = p / (2 * Math.PI) * Math.asin(c / a);\n    }\n    if (t < 1) {\n      return -0.5 * (a * Math.pow(2, 10 * (t -= 1)) * Math.sin((t * d - s) * (2 * Math.PI) / p)) + b;\n    }\n    return a * Math.pow(2, -10 * (t -= 1)) * Math.sin((t * d - s) * (2 * Math.PI) / p) * 0.5 + c + b;\n  }\n  easeInBack(t, b, c, d, s = 1.70158) {\n    return c * (t /= d) * t * ((s + 1) * t - s) + b;\n  }\n  easeOutBack(t, b, c, d, s = 1.70158) {\n    return c * ((t = t / d - 1) * t * ((s + 1) * t + s) + 1) + b;\n  }\n  easeInOutBack(t, b, c, d, s = 1.70158) {\n    // eslint-disable-next-line no-cond-assign\n    if ((t /= d / 2) < 1) {\n      return c / 2 * (t * t * (((s *= 1.525) + 1) * t - s)) + b;\n    }\n    return c / 2 * ((t -= 2) * t * (((s *= 1.525) + 1) * t + s) + 2) + b;\n  }\n  easeInBounce(t, b, c, d) {\n    return c - this.easeOutBounce(d - t, 0, c, d) + b;\n  }\n  easeOutBounce(t, b, c, d) {\n    // eslint-disable-next-line no-cond-assign\n    if ((t /= d) < 1 / 2.75) {\n      return c * (7.5625 * t * t) + b;\n    } else if (t < 2 / 2.75) {\n      return c * (7.5625 * (t -= 1.5 / 2.75) * t + 0.75) + b;\n    } else if (t < 2.5 / 2.75) {\n      return c * (7.5625 * (t -= 2.25 / 2.75) * t + 0.9375) + b;\n    }\n    return c * (7.5625 * (t -= 2.625 / 2.75) * t + 0.984375) + b;\n  }\n  easeInOutBounce(t, b, c, d) {\n    if (t < d / 2) {\n      return this.easeInBounce(t * 2, 0, c, d) * 0.5 + b;\n    }\n    return this.easeOutBounce(t * 2 - d, 0, c, d) * 0.5 + c * 0.5 + b;\n  }\n  static {\n    this.ɵfac = function RoundProgressEase_Factory(t) {\n      return new (t || RoundProgressEase)();\n    };\n  }\n  static {\n    this.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n      token: RoundProgressEase,\n      factory: RoundProgressEase.ɵfac,\n      providedIn: 'root'\n    });\n  }\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(RoundProgressEase, [{\n    type: Injectable,\n    args: [{\n      providedIn: 'root'\n    }]\n  }], null, null);\n})();\nclass RoundProgressComponent {\n  constructor(service, easing, defaults, ngZone) {\n    this.service = service;\n    this.easing = easing;\n    this.defaults = defaults;\n    this.ngZone = ngZone;\n    this.currentLinecap = '';\n    /** Current value of the progress bar. */\n    this.current = 0;\n    /** Maximum value of the progress bar. */\n    this.max = 0;\n    /** Radius of the circle. */\n    this.radius = this.defaults.radius;\n    /** Name of the easing function to use when animating. */\n    this.animation = this.defaults.animation;\n    /** Time in millisconds by which to delay the animation. */\n    this.animationDelay = this.defaults.animationDelay;\n    /** Duration of the animation. */\n    this.duration = this.defaults.duration;\n    /** Width of the circle's stroke. */\n    this.stroke = this.defaults.stroke;\n    /** Color of the circle. */\n    this.color = this.defaults.color;\n    /** Background color of the circle. */\n    this.background = this.defaults.background;\n    /** Whether the circle should take up the width of its parent. */\n    this.responsive = this.defaults.responsive;\n    /** Whether the circle is filling up clockwise. */\n    this.clockwise = this.defaults.clockwise;\n    /** Whether to render a semicircle. */\n    this.semicircle = this.defaults.semicircle;\n    /** Whether the tip of the progress should be rounded off. */\n    this.rounded = this.defaults.rounded;\n    /** Emits when a new value has been rendered. */\n    this.onRender = new EventEmitter();\n    this.lastAnimationId = 0;\n  }\n  /** Animates a change in the current value. */\n  _animateChange(from, to) {\n    if (typeof from !== 'number') {\n      from = 0;\n    }\n    to = this._clamp(to);\n    from = this._clamp(from);\n    const self = this;\n    const changeInValue = to - from;\n    const duration = self.duration;\n    // Avoid firing change detection for each of the animation frames.\n    self.ngZone.runOutsideAngular(() => {\n      const start = () => {\n        const startTime = self.service.getTimestamp();\n        const id = ++self.lastAnimationId;\n        requestAnimationFrame(function animation() {\n          const currentTime = Math.min(self.service.getTimestamp() - startTime, duration);\n          const easingFn = self.easing[self.animation];\n          const value = easingFn(currentTime, from, changeInValue, duration);\n          self._updatePath(value);\n          if (self.onRender.observers.length > 0) {\n            self.onRender.emit(value);\n          }\n          if (id === self.lastAnimationId && currentTime < duration) {\n            requestAnimationFrame(animation);\n          }\n        });\n      };\n      if (this.animationDelay > 0) {\n        setTimeout(start, this.animationDelay);\n      } else {\n        start();\n      }\n    });\n  }\n  /** Updates the path apperance. */\n  _updatePath(value) {\n    if (this.path) {\n      const arc = this.service.getArc(value, this.max, this.radius - this.stroke / 2, this.radius, this.semicircle);\n      const path = this.path.nativeElement;\n      // Remove the rounded line cap when the value is zero,\n      // because SVG won't allow it to disappear completely.\n      const linecap = this.rounded && value > 0 ? 'round' : '';\n      // This is called on each animation frame so avoid\n      // updating the line cap unless it has changed.\n      if (linecap !== this.currentLinecap) {\n        this.currentLinecap = linecap;\n        path.style.strokeLinecap = linecap;\n      }\n      path.setAttribute('d', arc);\n    }\n  }\n  /** Clamps a value between the maximum and 0. */\n  _clamp(value) {\n    return Math.max(0, Math.min(value || 0, this.max));\n  }\n  /** Determines the SVG transforms for the <path> node. */\n  getPathTransform() {\n    const diameter = this._getDiameter();\n    if (this.semicircle) {\n      return this.clockwise ? `translate(0, ${diameter}) rotate(-90)` : `translate(${diameter + ',' + diameter}) rotate(90) scale(-1, 1)`;\n    } else if (!this.clockwise) {\n      return `scale(-1, 1) translate(-${diameter} 0)`;\n    }\n    return null;\n  }\n  /** Resolves a color through the service. */\n  resolveColor(color) {\n    return this.service.resolveColor(color);\n  }\n  /** Change detection callback. */\n  ngOnChanges(changes) {\n    if (changes.current) {\n      this._animateChange(changes.current.previousValue, changes.current.currentValue);\n    } else {\n      this._updatePath(this.current);\n    }\n  }\n  /** Diameter of the circle. */\n  _getDiameter() {\n    return this.radius * 2;\n  }\n  /** The CSS height of the wrapper element. */\n  _getElementHeight() {\n    if (!this.responsive) {\n      return (this.semicircle ? this.radius : this._getDiameter()) + 'px';\n    }\n    return null;\n  }\n  /** Viewbox for the SVG element. */\n  _getViewBox() {\n    const diameter = this._getDiameter();\n    return `0 0 ${diameter} ${this.semicircle ? this.radius : diameter}`;\n  }\n  /** Bottom padding for the wrapper element. */\n  _getPaddingBottom() {\n    if (this.responsive) {\n      return this.semicircle ? '50%' : '100%';\n    }\n    return null;\n  }\n  static {\n    this.ɵfac = function RoundProgressComponent_Factory(t) {\n      return new (t || RoundProgressComponent)(i0.ɵɵdirectiveInject(RoundProgressService), i0.ɵɵdirectiveInject(RoundProgressEase), i0.ɵɵdirectiveInject(ROUND_PROGRESS_DEFAULTS), i0.ɵɵdirectiveInject(i0.NgZone));\n    };\n  }\n  static {\n    this.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n      type: RoundProgressComponent,\n      selectors: [[\"round-progress\"]],\n      viewQuery: function RoundProgressComponent_Query(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵviewQuery(_c0, 5);\n        }\n        if (rf & 2) {\n          let _t;\n          i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.path = _t.first);\n        }\n      },\n      hostAttrs: [\"role\", \"progressbar\"],\n      hostVars: 11,\n      hostBindings: function RoundProgressComponent_HostBindings(rf, ctx) {\n        if (rf & 2) {\n          i0.ɵɵattribute(\"aria-valuemin\", 0)(\"aria-valuemax\", ctx.max)(\"aria-valuenow\", ctx.current);\n          i0.ɵɵstyleProp(\"width\", ctx.responsive ? \"\" : ctx._getDiameter() + \"px\")(\"height\", ctx._getElementHeight())(\"padding-bottom\", ctx._getPaddingBottom());\n          i0.ɵɵclassProp(\"responsive\", ctx.responsive);\n        }\n      },\n      inputs: {\n        current: \"current\",\n        max: \"max\",\n        radius: \"radius\",\n        animation: \"animation\",\n        animationDelay: \"animationDelay\",\n        duration: \"duration\",\n        stroke: \"stroke\",\n        color: \"color\",\n        background: \"background\",\n        responsive: \"responsive\",\n        clockwise: \"clockwise\",\n        semicircle: \"semicircle\",\n        rounded: \"rounded\"\n      },\n      outputs: {\n        onRender: \"onRender\"\n      },\n      standalone: true,\n      features: [i0.ɵɵNgOnChangesFeature, i0.ɵɵStandaloneFeature],\n      decls: 4,\n      vars: 13,\n      consts: [[\"xmlns\", \"http://www.w3.org/2000/svg\"], [\"fill\", \"none\"], [\"path\", \"\"]],\n      template: function RoundProgressComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵnamespaceSVG();\n          i0.ɵɵelementStart(0, \"svg\", 0);\n          i0.ɵɵelement(1, \"circle\", 1)(2, \"path\", 1, 2);\n          i0.ɵɵelementEnd();\n        }\n        if (rf & 2) {\n          i0.ɵɵattribute(\"viewBox\", ctx._getViewBox());\n          i0.ɵɵadvance();\n          i0.ɵɵstyleProp(\"stroke\", ctx.resolveColor(ctx.background))(\"stroke-width\", ctx.stroke);\n          i0.ɵɵattribute(\"cx\", ctx.radius)(\"cy\", ctx.radius)(\"r\", ctx.radius - ctx.stroke / 2);\n          i0.ɵɵadvance();\n          i0.ɵɵstyleProp(\"stroke-width\", ctx.stroke)(\"stroke\", ctx.resolveColor(ctx.color));\n          i0.ɵɵattribute(\"transform\", ctx.getPathTransform());\n        }\n      },\n      styles: [\"[_nghost-%COMP%]{display:block;position:relative;overflow:hidden}.responsive[_nghost-%COMP%]{width:100%;padding-bottom:100%}.responsive[_nghost-%COMP%] > svg[_ngcontent-%COMP%]{position:absolute;width:100%;height:100%;top:0;left:0}\"],\n      changeDetection: 0\n    });\n  }\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(RoundProgressComponent, [{\n    type: Component,\n    args: [{\n      selector: 'round-progress',\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      host: {\n        'role': 'progressbar',\n        '[attr.aria-valuemin]': '0',\n        '[attr.aria-valuemax]': 'max',\n        '[attr.aria-valuenow]': 'current',\n        '[style.width]': 'responsive ? \"\" : _getDiameter() + \"px\"',\n        '[style.height]': '_getElementHeight()',\n        '[style.padding-bottom]': '_getPaddingBottom()',\n        '[class.responsive]': 'responsive'\n      },\n      standalone: true,\n      template: \"<svg xmlns=\\\"http://www.w3.org/2000/svg\\\" [attr.viewBox]=\\\"_getViewBox()\\\">\\n  <circle\\n    fill=\\\"none\\\"\\n    [attr.cx]=\\\"radius\\\"\\n    [attr.cy]=\\\"radius\\\"\\n    [attr.r]=\\\"radius - stroke / 2\\\"\\n    [style.stroke]=\\\"resolveColor(background)\\\"\\n    [style.stroke-width]=\\\"stroke\\\"/>\\n\\n  <path\\n    #path\\n    fill=\\\"none\\\"\\n    [style.stroke-width]=\\\"stroke\\\"\\n    [style.stroke]=\\\"resolveColor(color)\\\"\\n    [attr.transform]=\\\"getPathTransform()\\\"/>\\n</svg>\\n\",\n      styles: [\":host{display:block;position:relative;overflow:hidden}:host(.responsive){width:100%;padding-bottom:100%}:host(.responsive)>svg{position:absolute;width:100%;height:100%;top:0;left:0}\\n\"]\n    }]\n  }], () => [{\n    type: RoundProgressService\n  }, {\n    type: RoundProgressEase\n  }, {\n    type: undefined,\n    decorators: [{\n      type: Inject,\n      args: [ROUND_PROGRESS_DEFAULTS]\n    }]\n  }, {\n    type: i0.NgZone\n  }], {\n    path: [{\n      type: ViewChild,\n      args: ['path']\n    }],\n    current: [{\n      type: Input\n    }],\n    max: [{\n      type: Input\n    }],\n    radius: [{\n      type: Input\n    }],\n    animation: [{\n      type: Input\n    }],\n    animationDelay: [{\n      type: Input\n    }],\n    duration: [{\n      type: Input\n    }],\n    stroke: [{\n      type: Input\n    }],\n    color: [{\n      type: Input\n    }],\n    background: [{\n      type: Input\n    }],\n    responsive: [{\n      type: Input\n    }],\n    clockwise: [{\n      type: Input\n    }],\n    semicircle: [{\n      type: Input\n    }],\n    rounded: [{\n      type: Input\n    }],\n    onRender: [{\n      type: Output\n    }]\n  });\n})();\nclass RoundProgressModule {\n  static {\n    this.ɵfac = function RoundProgressModule_Factory(t) {\n      return new (t || RoundProgressModule)();\n    };\n  }\n  static {\n    this.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n      type: RoundProgressModule,\n      imports: [RoundProgressComponent],\n      exports: [RoundProgressComponent]\n    });\n  }\n  static {\n    this.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n      providers: [ROUND_PROGRESS_DEFAULTS_PROVIDER]\n    });\n  }\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(RoundProgressModule, [{\n    type: NgModule,\n    args: [{\n      imports: [RoundProgressComponent],\n      exports: [RoundProgressComponent],\n      providers: [ROUND_PROGRESS_DEFAULTS_PROVIDER]\n    }]\n  }], null, null);\n})();\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { ROUND_PROGRESS_DEFAULTS, ROUND_PROGRESS_DEFAULTS_PROVIDER, RoundProgressComponent, RoundProgressEase, RoundProgressModule, RoundProgressService, RoundProgressModule as RoundprogressModule };\n"],
  "mappings": "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",
  "names": []
}
