{"version":3,"file":"angular-svg-round-progressbar.mjs","sources":["../../../src/lib/round-progress/round-progress.service.ts","../../../src/lib/round-progress/round-progress.config.ts","../../../src/lib/round-progress/round-progress.ease.ts","../../../src/lib/round-progress/round-progress.component.ts","../../../src/lib/round-progress/round-progress.component.html","../../../src/lib/round-progress/round-progress.module.ts","../../../src/lib/angular-svg-round-progressbar.ts"],"sourcesContent":["import {Injectable, Inject, Optional} from '@angular/core';\nimport {DOCUMENT} from '@angular/common';\n\nconst DEGREE_IN_RADIANS: number = Math.PI / 180;\n\n@Injectable({providedIn: 'root'})\nexport class RoundProgressService {\n  private base: HTMLBaseElement;\n  private hasPerf: boolean;\n  public supportsSvg: boolean;\n\n  constructor(@Optional() @Inject(DOCUMENT) document: any) {\n    this.supportsSvg = !!(\n      document &&\n      document.createElementNS &&\n      document.createElementNS('http://www.w3.org/2000/svg', 'svg').createSVGRect\n    );\n\n    this.base = document && document.head.querySelector('base');\n    this.hasPerf =\n      typeof window !== 'undefined' &&\n      window.performance &&\n      window.performance.now &&\n      typeof window.performance.now() === 'number';\n  }\n\n  /**\n   * Resolves a SVG color against the page's `base` tag.\n   */\n  resolveColor(color: string): string {\n    if (this.base && this.base.href) {\n      const hashIndex = color.indexOf('#');\n\n      if (hashIndex > -1 && color.indexOf('url') > -1) {\n        return color.slice(0, hashIndex) + location.href + color.slice(hashIndex);\n      }\n    }\n\n    return color;\n  }\n\n  /**\n   * Generates a timestamp.\n   */\n  getTimestamp(): number {\n    return this.hasPerf ? window.performance.now() : Date.now();\n  }\n\n  /**\n   * Generates the value for an SVG arc.\n   *\n   * @param current Current value.\n   * @param total Maximum value.\n   * @param pathRadius Radius of the SVG path.\n   * @param elementRadius Radius of the SVG container.\n   * @param isSemicircle Whether the element should be a semicircle.\n   */\n  getArc(current: number, total: number, pathRadius: number, elementRadius: number,\n         isSemicircle = false): string {\n    const value = Math.max(0, Math.min(current || 0, total));\n    const maxAngle = isSemicircle ? 180 : 359.9999;\n    const percentage = total === 0 ? maxAngle : (value / total) * maxAngle;\n    const start = this._polarToCartesian(elementRadius, pathRadius, percentage);\n    const end = this._polarToCartesian(elementRadius, pathRadius, 0);\n    const arcSweep = percentage <= 180 ? 0 : 1;\n\n    return `M ${start} A ${pathRadius} ${pathRadius} 0 ${arcSweep} 0 ${end}`;\n  }\n\n  /**\n   * Converts polar cooradinates to Cartesian.\n   *\n   * @param elementRadius Radius of the wrapper element.\n   * @param pathRadius Radius of the path being described.\n   * @param angleInDegrees Degree to be converted.\n   */\n  private _polarToCartesian(elementRadius: number, pathRadius: number,\n                            angleInDegrees: number): string {\n    const angleInRadians = (angleInDegrees - 90) * DEGREE_IN_RADIANS;\n    const x = elementRadius + pathRadius * Math.cos(angleInRadians);\n    const y = elementRadius + pathRadius * Math.sin(angleInRadians);\n\n    return x + ' ' + y;\n  }\n}\n","import {InjectionToken, Provider} from '@angular/core';\n\nconst DEFAULTS = {\n  radius: 125,\n  animation: 'easeOutCubic',\n  animationDelay: undefined,\n  duration: 500,\n  stroke: 15,\n  color: '#45CCCE',\n  background: '#EAEAEA',\n  responsive: false,\n  clockwise: true,\n  semicircle: false,\n  rounded: false,\n};\n\nexport const ROUND_PROGRESS_DEFAULTS =\n    new InjectionToken<RoundProgressDefaults>('ROUND_PROGRESS_DEFAULTS', {\n      providedIn: 'root',\n      factory: () => DEFAULTS\n    });\n\nexport const ROUND_PROGRESS_DEFAULTS_PROVIDER: Provider = {\n  provide: ROUND_PROGRESS_DEFAULTS,\n  useValue: DEFAULTS,\n};\n\nexport interface RoundProgressDefaults {\n  radius?: number;\n  animation?: string;\n  animationDelay?: number;\n  duration?: number;\n  stroke?: number;\n  color?: string;\n  background?: string;\n  responsive?: boolean;\n  clockwise?: boolean;\n  semicircle?: boolean;\n  rounded?: boolean;\n}\n","/**\n * TERMS OF USE - EASING EQUATIONS\n * Open source under the BSD License.\n *\n * Copyright © 2001 Robert Penner\n * All rights reserved.\n * Redistribution and use in source and binary forms, with or without modification, are permitted\n * provided that the following conditions are met:\n *\n * Redistributions of source code must retain the above copyright notice, this list of conditions\n * and the following disclaimer.\n *\n * Redistributions in binary form must reproduce the above copyright notice, this list of conditions\n * and the following disclaimer in the documentation and/or other materials provided with the\n * distribution.\n *\n * Neither the name of the author nor the names of contributors may be used to endorse or promote\n * products derived from this software without specific prior written permission.\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND ANY EXPRESS OR\n * IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND\n * FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR\n * CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL\n * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n * WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN\n * ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n */\n\nimport {Injectable} from '@angular/core';\n\n@Injectable({providedIn: 'root'})\nexport class RoundProgressEase {\n  // t: current time (or position) of the neonate. This can be seconds or frames, steps,\n  // seconds, ms, whatever – as long as the unit is the same as is used for the total time.\n  // b: beginning value of the property.\n  // c: change between the beginning and destination value of the property.\n  // d: total time of the neonate.\n\n  linearEase(t: number, b: number, c: number, d: number): number {\n    return (c * t) / d + b;\n  }\n\n  easeInQuad(t: number, b: number, c: number, d: number): number {\n    return c * (t /= d) * t + b;\n  }\n\n  easeOutQuad(t: number, b: number, c: number, d: number): number {\n    return -c * (t /= d) * (t - 2) + b;\n  }\n\n  easeInOutQuad(t: number, b: number, c: number, d: number): number {\n    // eslint-disable-next-line no-cond-assign\n    if ((t /= d / 2) < 1) {\n      return (c / 2) * t * t + b;\n    }\n\n    return (-c / 2) * (--t * (t - 2) - 1) + b;\n  }\n\n  easeInCubic(t: number, b: number, c: number, d: number): number {\n    return c * (t /= d) * t * t + b;\n  }\n\n  easeOutCubic(t: number, b: number, c: number, d: number): number {\n    return c * ((t = t / d - 1) * t * t + 1) + b;\n  }\n\n  easeInOutCubic(t: number, b: number, c: number, d: number): number {\n    // eslint-disable-next-line no-cond-assign\n    if ((t /= d / 2) < 1) {\n      return (c / 2) * t * t * t + b;\n    }\n\n    return (c / 2) * ((t -= 2) * t * t + 2) + b;\n  }\n\n  easeInQuart(t: number, b: number, c: number, d: number): number {\n    return c * (t /= d) * t * t * t + b;\n  }\n\n  easeOutQuart(t: number, b: number, c: number, d: number): number {\n    return -c * ((t = t / d - 1) * t * t * t - 1) + b;\n  }\n\n  easeInOutQuart(t: number, b: number, c: number, d: number): number {\n    // eslint-disable-next-line no-cond-assign\n    if ((t /= d / 2) < 1) {\n      return (c / 2) * t * t * t * t + b;\n    }\n\n    return (-c / 2) * ((t -= 2) * t * t * t - 2) + b;\n  }\n\n  easeInQuint(t: number, b: number, c: number, d: number): number {\n    return c * (t /= d) * t * t * t * t + b;\n  }\n\n  easeOutQuint(t: number, b: number, c: number, d: number): number {\n    return c * ((t = t / d - 1) * t * t * t * t + 1) + b;\n  }\n\n  easeInOutQuint(t: number, b: number, c: number, d: number): number {\n    // eslint-disable-next-line no-cond-assign\n    if ((t /= d / 2) < 1) {\n      return (c / 2) * t * t * t * t * t + b;\n    }\n\n    return (c / 2) * ((t -= 2) * t * t * t * t + 2) + b;\n  }\n\n  easeInSine(t: number, b: number, c: number, d: number): number {\n    return -c * Math.cos((t / d) * (Math.PI / 2)) + c + b;\n  }\n\n  easeOutSine(t: number, b: number, c: number, d: number): number {\n    return c * Math.sin((t / d) * (Math.PI / 2)) + b;\n  }\n\n  easeInOutSine(t: number, b: number, c: number, d: number): number {\n    return (-c / 2) * (Math.cos((Math.PI * t) / d) - 1) + b;\n  }\n\n  easeInExpo(t: number, b: number, c: number, d: number): number {\n    return t === 0 ? b : c * Math.pow(2, 10 * (t / d - 1)) + b;\n  }\n\n  easeOutExpo(t: number, b: number, c: number, d: number): number {\n    return t === d ? b + c : c * (-Math.pow(2, (-10 * t) / d) + 1) + b;\n  }\n\n  easeInOutExpo(t: number, b: number, c: number, d: number): number {\n    if (t === 0) {\n      return b;\n    }\n\n    if (t === d) {\n      return b + c;\n    }\n\n    // eslint-disable-next-line no-cond-assign\n    if ((t /= d / 2) < 1) {\n      return (c / 2) * Math.pow(2, 10 * (t - 1)) + b;\n    }\n\n    return (c / 2) * (-Math.pow(2, -10 * --t) + 2) + b;\n  }\n\n  easeInCirc(t: number, b: number, c: number, d: number): number {\n    return -c * (Math.sqrt(1 - (t /= d) * t) - 1) + b;\n  }\n\n  easeOutCirc(t: number, b: number, c: number, d: number): number {\n    return c * Math.sqrt(1 - (t = t / d - 1) * t) + b;\n  }\n\n  easeInOutCirc(t: number, b: number, c: number, d: number): number {\n    // eslint-disable-next-line no-cond-assign\n    if ((t /= d / 2) < 1) {\n      return (-c / 2) * (Math.sqrt(1 - t * t) - 1) + b;\n    }\n\n    return (c / 2) * (Math.sqrt(1 - (t -= 2) * t) + 1) + b;\n  }\n\n  easeInElastic(t: number, b: number, c: number, d: number): number {\n    const p = d * 0.3;\n    let s = 1.70158;\n    let a = c;\n\n    if (t === 0) {\n      return b;\n    }\n\n    // eslint-disable-next-line no-cond-assign\n    if ((t /= d) === 1) {\n      return b + c;\n    }\n\n    if (a < Math.abs(c)) {\n      a = c;\n      s = p / 4;\n    } else {\n      s = (p / (2 * Math.PI)) * Math.asin(c / a);\n    }\n\n    return -(a * Math.pow(2, 10 * t--) * Math.sin(((t * d - s) * (2 * Math.PI)) / p)) + b;\n  }\n\n  easeOutElastic(t: number, b: number, c: number, d: number): number {\n    const p = d * 0.3;\n    let s = 1.70158;\n    let a = c;\n\n    if (t === 0) {\n      return b;\n    }\n\n    // eslint-disable-next-line no-cond-assign\n    if ((t /= d) === 1) {\n      return b + c;\n    }\n\n    if (a < Math.abs(c)) {\n      a = c;\n      s = p / 4;\n    } else {\n      s = (p / (2 * Math.PI)) * Math.asin(c / a);\n    }\n\n    return a * Math.pow(2, -10 * t) * Math.sin(((t * d - s) * (2 * Math.PI)) / p) + c + b;\n  }\n\n  easeInOutElastic(t: number, b: number, c: number, d: number): number {\n    const p = d * (0.3 * 1.5);\n    let s = 1.70158;\n    let a = c;\n\n    if (t === 0) {\n      return b;\n    }\n\n    // eslint-disable-next-line no-cond-assign\n    if ((t /= d / 2) === 2) {\n      return b + c;\n    }\n\n    if (a < Math.abs(c)) {\n      a = c;\n      s = p / 4;\n    } else {\n      s = (p / (2 * Math.PI)) * Math.asin(c / a);\n    }\n\n    if (t < 1) {\n      return -0.5 * (a * Math.pow(2, 10 * (t -= 1)) *\n        Math.sin(((t * d - s) * (2 * Math.PI)) / p)) + b;\n    }\n\n    return a * Math.pow(2, -10 * (t -= 1)) *\n      Math.sin(((t * d - s) * (2 * Math.PI)) / p) * 0.5 + c + b;\n  }\n\n  easeInBack(t: number, b: number, c: number, d: number, s = 1.70158): number {\n    return c * (t /= d) * t * ((s + 1) * t - s) + b;\n  }\n\n  easeOutBack(t: number, b: number, c: number, d: number, s = 1.70158): number {\n    return c * ((t = t / d - 1) * t * ((s + 1) * t + s) + 1) + b;\n  }\n\n  easeInOutBack(t: number, b: number, c: number, d: number, s = 1.70158): number {\n    // eslint-disable-next-line no-cond-assign\n    if ((t /= d / 2) < 1) {\n      return (c / 2) * (t * t * (((s *= 1.525) + 1) * t - s)) + b;\n    }\n\n    return (c / 2) * ((t -= 2) * t * (((s *= 1.525) + 1) * t + s) + 2) + b;\n  }\n\n  easeInBounce(t: number, b: number, c: number, d: number): number {\n    return c - this.easeOutBounce(d - t, 0, c, d) + b;\n  }\n\n  easeOutBounce(t: number, b: number, c: number, d: number): number {\n    // eslint-disable-next-line no-cond-assign\n    if ((t /= d) < 1 / 2.75) {\n      return c * (7.5625 * t * t) + b;\n    } else if (t < 2 / 2.75) {\n      return c * (7.5625 * (t -= 1.5 / 2.75) * t + 0.75) + b;\n    } else if (t < 2.5 / 2.75) {\n      return c * (7.5625 * (t -= 2.25 / 2.75) * t + 0.9375) + b;\n    }\n\n    return c * (7.5625 * (t -= 2.625 / 2.75) * t + 0.984375) + b;\n  }\n\n  easeInOutBounce(t: number, b: number, c: number, d: number): number {\n    if (t < d / 2) {\n      return this.easeInBounce(t * 2, 0, c, d) * 0.5 + b;\n    }\n\n    return this.easeOutBounce(t * 2 - d, 0, c, d) * 0.5 + c * 0.5 + b;\n  }\n}\n","import {\n  Component,\n  Input,\n  Output,\n  OnChanges,\n  NgZone,\n  EventEmitter,\n  ViewChild,\n  Inject,\n  ElementRef,\n  SimpleChanges,\n  ChangeDetectionStrategy,\n} from '@angular/core';\n\nimport {RoundProgressService} from './round-progress.service';\nimport {ROUND_PROGRESS_DEFAULTS, RoundProgressDefaults} from './round-progress.config';\nimport {RoundProgressEase} from './round-progress.ease';\n\n@Component({\n  selector: 'round-progress',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  templateUrl: './round-progress.component.html',\n  styleUrls: ['./round-progress.component.css'],\n  host: {\n    'role': 'progressbar',\n    '[attr.aria-valuemin]': '0',\n    '[attr.aria-valuemax]': 'max',\n    '[attr.aria-valuenow]': 'current',\n    '[style.width]': 'responsive ? \"\" : _getDiameter() + \"px\"',\n    '[style.height]': '_getElementHeight()',\n    '[style.padding-bottom]': '_getPaddingBottom()',\n    '[class.responsive]': 'responsive',\n  },\n  standalone: true\n})\nexport class RoundProgressComponent implements OnChanges {\n  private currentLinecap: 'round' | '' = '';\n\n  /** Reference to the underlying `path` node. */\n  @ViewChild('path') path!: ElementRef<SVGPathElement>;\n\n  /** Current value of the progress bar. */\n  @Input() current: number = 0;\n\n  /** Maximum value of the progress bar. */\n  @Input() max: number = 0;\n\n  /** Radius of the circle. */\n  @Input() radius: number = this.defaults.radius!;\n\n  /** Name of the easing function to use when animating. */\n  @Input() animation: string = this.defaults.animation!;\n\n  /** Time in millisconds by which to delay the animation. */\n  @Input() animationDelay: number = this.defaults.animationDelay!;\n\n  /** Duration of the animation. */\n  @Input() duration: number = this.defaults.duration!;\n\n  /** Width of the circle's stroke. */\n  @Input() stroke: number = this.defaults.stroke!;\n\n  /** Color of the circle. */\n  @Input() color: string = this.defaults.color!;\n\n  /** Background color of the circle. */\n  @Input() background: string = this.defaults.background!;\n\n  /** Whether the circle should take up the width of its parent. */\n  @Input() responsive: boolean = this.defaults.responsive!;\n\n  /** Whether the circle is filling up clockwise. */\n  @Input() clockwise: boolean = this.defaults.clockwise!;\n\n  /** Whether to render a semicircle. */\n  @Input() semicircle: boolean = this.defaults.semicircle!;\n\n  /** Whether the tip of the progress should be rounded off. */\n  @Input() rounded: boolean = this.defaults.rounded!;\n\n  /** Emits when a new value has been rendered. */\n  @Output() onRender: EventEmitter<number> = new EventEmitter();\n\n  private lastAnimationId = 0;\n\n  constructor(\n    private service: RoundProgressService,\n    private easing: RoundProgressEase,\n    @Inject(ROUND_PROGRESS_DEFAULTS) private defaults: RoundProgressDefaults,\n    private ngZone: NgZone\n  ) {}\n\n  /** Animates a change in the current value. */\n  private _animateChange(from: number, to: number): void {\n    if (typeof from !== 'number') {\n      from = 0;\n    }\n\n    to = this._clamp(to);\n    from = this._clamp(from);\n\n    const self = this;\n    const changeInValue = to - from;\n    const duration = self.duration;\n\n    // Avoid firing change detection for each of the animation frames.\n    self.ngZone.runOutsideAngular(() => {\n      const start = () => {\n        const startTime = self.service.getTimestamp();\n        const id = ++self.lastAnimationId;\n\n        requestAnimationFrame(function animation() {\n          const currentTime = Math.min(self.service.getTimestamp() - startTime, duration);\n          const easingFn = self.easing[self.animation as keyof RoundProgressEase];\n          const value = easingFn(currentTime, from, changeInValue, duration);\n\n          self._updatePath(value);\n\n          if (self.onRender.observers.length > 0) {\n            self.onRender.emit(value);\n          }\n\n          if (id === self.lastAnimationId && currentTime < duration) {\n            requestAnimationFrame(animation);\n          }\n        });\n      };\n\n      if (this.animationDelay > 0) {\n        setTimeout(start, this.animationDelay);\n      } else {\n        start();\n      }\n    });\n  }\n\n  /** Updates the path apperance. */\n  private _updatePath(value: number): void {\n    if (this.path) {\n      const arc = this.service.getArc(value, this.max, this.radius - this.stroke / 2,\n                                      this.radius, this.semicircle);\n      const path = this.path.nativeElement;\n\n      // Remove the rounded line cap when the value is zero,\n      // because SVG won't allow it to disappear completely.\n      const linecap = this.rounded && value > 0 ? 'round' : '';\n\n      // This is called on each animation frame so avoid\n      // updating the line cap unless it has changed.\n      if (linecap !== this.currentLinecap) {\n        this.currentLinecap = linecap;\n        path.style.strokeLinecap = linecap;\n      }\n\n      path.setAttribute('d', arc);\n    }\n  }\n\n  /** Clamps a value between the maximum and 0. */\n  private _clamp(value: number): number {\n    return Math.max(0, Math.min(value || 0, this.max));\n  }\n\n  /** Determines the SVG transforms for the <path> node. */\n  getPathTransform(): string|null {\n    const diameter = this._getDiameter();\n\n    if (this.semicircle) {\n      return this.clockwise\n        ? `translate(0, ${diameter}) rotate(-90)`\n        : `translate(${diameter + ',' + diameter}) rotate(90) scale(-1, 1)`;\n    } else if (!this.clockwise) {\n      return `scale(-1, 1) translate(-${diameter} 0)`;\n    }\n\n    return null;\n  }\n\n  /** Resolves a color through the service. */\n  resolveColor(color: string): string {\n    return this.service.resolveColor(color);\n  }\n\n  /** Change detection callback. */\n  ngOnChanges(changes: SimpleChanges): void {\n    if (changes.current) {\n      this._animateChange(changes.current.previousValue, changes.current.currentValue);\n    } else {\n      this._updatePath(this.current);\n    }\n  }\n\n  /** Diameter of the circle. */\n  _getDiameter(): number {\n    return this.radius * 2;\n  }\n\n  /** The CSS height of the wrapper element. */\n  _getElementHeight(): string|null {\n    if (!this.responsive) {\n      return (this.semicircle ? this.radius : this._getDiameter()) + 'px';\n    }\n\n    return null;\n  }\n\n  /** Viewbox for the SVG element. */\n  _getViewBox(): string {\n    const diameter = this._getDiameter();\n    return `0 0 ${diameter} ${this.semicircle ? this.radius : diameter}`;\n  }\n\n  /** Bottom padding for the wrapper element. */\n  _getPaddingBottom(): string|null {\n    if (this.responsive) {\n      return this.semicircle ? '50%' : '100%';\n    }\n\n    return null;\n  }\n}\n","<svg xmlns=\"http://www.w3.org/2000/svg\" [attr.viewBox]=\"_getViewBox()\">\n  <circle\n    fill=\"none\"\n    [attr.cx]=\"radius\"\n    [attr.cy]=\"radius\"\n    [attr.r]=\"radius - stroke / 2\"\n    [style.stroke]=\"resolveColor(background)\"\n    [style.stroke-width]=\"stroke\"/>\n\n  <path\n    #path\n    fill=\"none\"\n    [style.stroke-width]=\"stroke\"\n    [style.stroke]=\"resolveColor(color)\"\n    [attr.transform]=\"getPathTransform()\"/>\n</svg>\n","import {NgModule} from '@angular/core';\nimport {RoundProgressComponent} from './round-progress.component';\nimport {ROUND_PROGRESS_DEFAULTS_PROVIDER} from './round-progress.config';\n\n@NgModule({\n  imports: [RoundProgressComponent],\n  exports: [RoundProgressComponent],\n  providers: [ROUND_PROGRESS_DEFAULTS_PROVIDER],\n})\nexport class RoundProgressModule {}\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"],"names":[],"mappings":"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"}